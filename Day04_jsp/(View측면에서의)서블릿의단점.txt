< (View측면에서의) Servlet의 단점 >

(1) web.xml 매핑 
(2) 매번 컴파일
(3) scope 핸들링 복잡 
     application, session, reqeust, page 
(4) 중복코드 
     package aa.bb;

     import jakarta.servlet.http.*;
     import jakarta.servlet.*;
     import java.io.*;   
     
     public MyServlet extends HttpServlet

     public void service(HttpServletRequest req, HttpServletResponse res)
		throws ServletException, IOException {
	 res.setContentType("text/html;charset=utf-8"); 
	 PrintWriter pw = res.getWriter();
	 pw.println("");
     }
(5) 논리경로( WEB-INF/classes )
(6) 분업 힘듬( 디자이너 + 프로그래머 )
    - Servlet: html -> java 
    - JSP: html <- java
(7) Bean 등록 코드가 복잡 
     ConnectionPoolBean pool = (ConnectionPoolBean)application.getAttribute("pool"); //Get
     pool = new ConnectionPoolBean(); //Create 
     application.setAttribute("pool", pool); //Set


