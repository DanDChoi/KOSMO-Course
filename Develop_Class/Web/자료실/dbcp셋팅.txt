(1) server.xml 
    <Resource name="jdbc/myoracle" auth="Container"
              type="javax.sql.DataSource" driverClassName="oracle.jdbc.driver.OracleDriver"
              url="jdbc:oracle:thin:@127.0.0.1:1521:JAVA"
              username="servlet" password="java" maxTotal="20" maxIdle="10"
              maxWaitMillis="-1"/>

(2) web.xml 
    <resource-ref>
	 <description>Oracle Datasource example</description>
	 <res-ref-name>jdbc/myoracle</res-ref-name>
	 <res-type>javax.sql.DataSource</res-type>
	 <res-auth>Container</res-auth>
    </resource-ref>

(3) soo.dbcp.DbcpBean.java 
	package soo.dbcp;
	import javax.sql.DataSource;
	import javax.naming.InitialContext;
	import javax.naming.Context;
	import javax.naming.NamingException;

	public class DbcpBean 
	{
		private DataSource ds;
		public DbcpBean(){
			try{
				Context initContext = new InitialContext();
				Context envContext  = (Context)initContext.lookup("java:/comp/env");
				ds = (DataSource)envContext.lookup("jdbc/myoracle");
			}catch(NamingException ne){
				System.out.println("#tomcat이 만든 dbcp객체(jdbc/myoracle)이름을 못찾음");
			}
			//Connection con = ds.getConnection();
		}
		public DataSource getDs(){
			return ds;
		}
	}

(4) dbcp_test.jsp 
	<%@ page contentType="text/html;charset=utf-8" import="javax.sql.DataSource, java.sql.Connection"%>
	<jsp:useBean id="dbcp" class="soo.dbcp.DbcpBean" scope="application"/>

	<body style="text-align:center">
	<%
	     DataSource ds = dbcp.getDs();
		 Connection con = ds.getConnection();
	%>
	     # DBCP로부터 얻은 con: <%=con.hashCode()%>
	</body>